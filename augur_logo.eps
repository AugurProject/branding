%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.1 (Build 14B25) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 636 316
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 636 316
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
-66 448 m
702 448 l
702 -576 l
-66 -576 l
h
-66 448 m
W*
0 316 m
636 316 l
636 0 l
0 0 l
0 316 l
h
0 316 m
W*
0 0 636 316 rc
-5 321 m
641 321 l
641 -5 l
-5 -5 l
h
f
Q
0.3764706 0.16470589 0.32156864 sc
q
-66 448 m
702 448 l
702 -576 l
-66 -576 l
h
-66 448 m
W*
192.74115 154.78519 m
190.65862 160.79504 187.04697 166.09824 182.36876 170.23 c
182.36363 170.23512 182.35776 170.24023 182.3519 170.24535 c
181.7816 170.74884 181.19444 171.23407 180.59335 171.70177 c
180.56917 171.72003 180.54572 171.73904 180.52151 171.75804 c
179.93362 172.21257 179.3318 172.64958 178.71606 173.06831 c
178.67575 173.09607 178.63542 173.12384 178.59511 173.15161 c
177.98962 173.56012 177.37242 173.95035 176.742 174.32304 c
176.68776 174.35519 176.63351 174.38734 176.57854 174.41949 c
175.95619 174.78342 175.32213 175.12981 174.67633 175.45792 c
174.61182 175.49081 174.54732 175.52296 174.48207 175.55511 c
173.83994 175.87665 173.18828 176.17992 172.5256 176.46419 c
172.45451 176.49489 172.38194 176.52411 172.3101 176.55481 c
171.73174 176.79816 171.14751 177.03273 170.55376 177.24684 c
170.55156 177.23589 l
168.93742 177.81976 167.2749 178.30281 165.56474 178.65723 c
164.24968 176.14777 162.42003 173.93427 160.42326 172.02403 c
163.52985 171.78142 166.49275 171.04262 169.25189 169.90919 c
170.87335 169.24345 172.42152 168.43742 173.88171 167.50496 c
173.95721 167.45673 174.03566 167.41362 174.11043 167.36465 c
174.49161 167.1162 174.85959 166.85092 175.2283 166.58565 c
175.3969 166.46434 175.56915 166.34816 175.73482 166.22392 c
176.06541 165.97473 176.38503 165.71312 176.70462 165.45078 c
176.89595 165.29366 177.08946 165.13947 177.27638 164.97797 c
177.57327 164.72147 177.86061 164.45546 178.1465 164.188 c
178.34296 164.00385 178.5394 163.82042 178.73146 163.63115 c
178.99974 163.36589 179.26071 163.09404 179.51874 162.81854 c
179.71298 162.61099 179.90504 162.40199 180.09343 162.18861 c
180.33606 161.91385 180.57356 161.63542 180.80594 161.35188 c
180.99359 161.12242 181.17612 160.88931 181.35718 160.65472 c
181.57562 160.37119 181.79114 160.0862 181.99858 159.79462 c
182.17744 159.54396 182.34897 159.28819 182.51976 159.03169 c
182.71255 158.74158 182.9068 158.45146 183.09006 158.15477 c
183.25867 157.88074 183.41626 157.60011 183.57607 157.32024 c
183.74393 157.02646 183.91472 156.73488 184.07306 156.43527 c
184.23213 156.132 184.37727 155.82069 184.52608 155.51085 c
184.66534 155.2222 184.81122 154.93719 184.9417 154.64342 c
185.10736 154.26781 185.25397 153.88196 185.40425 153.49831 c
186.19592 151.47701 186.78162 149.35338 187.10561 147.14207 c
187.11 147.14281 l
188.02924 143.65411 l
188.41481 142.2028 192.03818 129.35588 200.38814 125.02754 c
209.96814 120.06123 222.66205 113.84312 227.65106 111.41184 c
161.76251 72 l
161.76251 99.03846 l
161.76251 103.29958 170.25247 108.28927 174.1676 110.04969 c
174.40144 110.17685 l
174.40218 110.17465 l
175.21584 110.57877 176.00897 111.01869 176.78673 111.48054 c
177.11292 111.65884 l
177.10266 111.68077 l
178.81429 112.72066 180.43062 113.89793 181.94287 115.19431 c
181.95093 115.17604 l
182.09241 115.29735 182.22655 115.42523 182.3651 115.54873 c
182.52122 115.68612 182.6759 115.82496 182.8291 115.96527 c
183.30777 116.40227 183.77545 116.8495 184.22992 117.31135 c
184.29443 117.37638 184.36115 117.43777 184.42491 117.50281 c
184.92264 118.01654 185.40131 118.54854 185.86899 119.09004 c
186.01047 119.253 186.14754 119.41888 186.28609 119.58477 c
186.65846 120.03127 187.01985 120.48654 187.37097 120.95058 c
187.46992 121.08212 187.57329 121.21 187.67078 121.34227 c
188.09154 121.91446 188.49324 122.50054 188.88101 123.09685 c
188.92133 123.15896 188.96678 123.21669 189.00636 123.27881 c
188.99977 123.28612 l
189.52827 124.11189 190.03188 124.95519 190.49368 125.82407 c
188.53575 128.18373 186.97952 130.78162 185.77002 133.21947 c
185.23932 131.70969 184.58325 130.25984 183.82236 128.87505 c
183.49396 128.27727 183.14577 127.69119 182.77779 127.119 c
182.72722 127.04154 182.67297 126.96627 182.62166 126.88881 c
182.30205 126.40285 181.96706 125.92712 181.6196 125.46162 c
181.51991 125.32788 181.41801 125.19489 181.31613 125.06261 c
180.96721 124.611 180.60509 124.16962 180.2305 123.73992 c
180.16307 123.66173 180.09782 123.58061 180.02892 123.50315 c
177.62311 120.79858 174.72324 118.54123 171.46785 116.87508 c
170.84404 116.55354 l
169.172 115.80596 154.43219 109.15085 154.43219 99.03846 c
154.43219 72 l
88.315666 111.54704 l
92.580444 114.18292 104.99654 121.56734 115.21866 124.78492 c
119.18803 126.03527 127.70732 120.70943 132.51601 116.74208 c
132.80629 116.48412 l
132.79529 116.47607 l
133.42863 115.87246 134.09056 115.301 134.76495 114.74342 c
135.00612 114.5293 l
135.01491 114.53954 l
136.53888 113.30308 138.16255 112.18573 139.87491 111.20284 c
139.87491 111.20212 l
139.87564 111.20212 l
140.25462 110.98434 140.63947 110.77461 141.02724 110.57 c
141.10201 110.53054 141.17824 110.49107 141.25301 110.45235 c
142.35916 109.87869 143.49683 109.36131 144.66527 108.90019 c
144.8302 108.83515 144.9944 108.76719 145.16154 108.70435 c
145.27882 108.65977 145.39317 108.60861 145.51193 108.5655 c
145.51633 108.57646 l
147.1759 107.96773 148.88828 107.47008 150.64975 107.10616 c
151.98312 109.61927 153.83771 111.83715 155.87846 113.74593 c
153.02257 113.95858 150.2847 114.58485 147.71542 115.55531 c
147.56735 115.61158 147.41782 115.66492 147.26973 115.72338 c
146.97873 115.83884 146.69138 115.96235 146.40475 116.08658 c
146.25815 116.15015 146.11081 116.21154 145.96567 116.27731 c
145.68199 116.40592 145.40271 116.5433 145.12341 116.68069 c
143.16403 117.64677 141.32779 118.82258 139.64621 120.18254 c
137.01608 122.56777 l
136.87242 122.68616 133.6676 125.6085 129.20491 128.14427 c
122.66187 131.86169 117.21471 133.07623 113.01151 131.75354 c
104.2723 129.0022 94.426216 123.66685 88.410957 120.14454 c
154.43219 238.61539 l
154.43219 186.73077 l
154.43219 184.89069 151.71411 180.09247 142.64357 176.01404 c
142.01097 175.67789 l
141.99704 175.69981 l
141.11594 175.26865 140.25829 174.7995 139.41896 174.30185 c
139.24451 174.20905 l
139.24817 174.19954 l
137.52847 173.16696 135.90115 171.99846 134.37938 170.70792 c
134.37938 170.70865 l
134.36838 170.69916 134.35812 170.68892 134.34712 170.67943 c
133.38686 169.86316 132.47057 168.99866 131.59972 168.08958 c
131.57114 168.05962 131.54254 168.02965 131.51395 167.99969 c
130.65851 167.10085 129.84851 166.15816 129.08762 165.17599 c
129.05389 165.13289 129.01944 165.08977 128.98573 165.04593 c
128.61922 164.56873 128.26369 164.08203 127.92063 163.58658 c
127.87959 163.52739 127.84073 163.46747 127.79968 163.40826 c
127.48448 162.94716 127.1788 162.47873 126.88412 162.00227 c
126.85188 161.95111 126.81889 161.89996 126.78664 161.8488 c
126.48829 161.36066 126.20314 160.86446 125.92752 160.36169 c
125.86155 160.24185 125.79704 160.12128 125.73254 160.00069 c
125.47817 159.5235 125.23114 159.04265 124.9973 158.55377 c
124.96065 158.4785 124.92547 158.40176 124.89028 158.32578 c
124.67477 157.8683 124.47099 157.40353 124.27454 156.93512 c
124.20343 156.76558 124.13306 156.59604 124.06416 156.42577 c
123.86916 155.94054 123.68224 155.45238 123.50778 154.95766 c
123.44694 154.78445 123.39196 154.60907 123.33332 154.43515 c
123.20943 154.06538 123.09142 153.69415 122.97926 153.32001 c
122.91769 153.11319 122.85392 152.90785 122.79601 152.69957 c
122.66187 152.22165 122.53798 151.73935 122.42363 151.25339 c
122.36792 151.01881 122.31807 150.78204 122.26676 150.54527 c
122.19346 150.20546 122.12601 149.86346 122.06297 149.52074 c
122.00726 149.21965 121.95376 148.91858 121.90537 148.61531 c
121.84087 148.20753 121.78223 147.79758 121.73091 147.38542 c
121.69866 147.12015 121.6686 146.85342 121.64149 146.58669 c
121.60484 146.22205 121.57478 145.85593 121.54839 145.48834 c
121.52274 145.12369 121.50294 144.75758 121.48755 144.39 c
121.47875 144.1642 121.46555 143.93985 121.46043 143.71257 c
121.46849 143.71112 l
121.46262 143.43561 121.44503 143.16231 121.44503 142.88461 c
121.44503 141.03943 121.58651 139.22638 121.8526 137.45427 c
124.44167 136.83969 127.18174 135.79762 130.05449 134.33023 c
129.27087 136.88573 128.83179 139.5903 128.78488 142.39061 c
128.78561 142.39061 l
128.78268 142.55504 128.77608 142.71873 128.77608 142.88461 c
128.77608 143.54305 128.8054 144.19489 128.84865 144.84308 c
128.85965 145.01408 128.87358 145.18434 128.88823 145.35535 c
128.93588 145.92607 128.99745 146.49242 129.07809 147.05365 c
129.08981 147.13185 129.09642 147.2115 129.10887 147.28969 c
129.20345 147.91669 129.32365 148.53566 129.45779 149.14951 c
129.49225 149.30588 129.53036 149.46153 129.56702 149.61719 c
129.68944 150.13312 129.82431 150.64319 129.97311 151.14815 c
130.0061 151.25923 130.03543 151.3725 130.06915 151.48285 c
130.25241 152.07623 130.45546 152.66084 130.67464 153.23743 c
130.7252 153.36969 130.77945 153.49977 130.83223 153.6313 c
131.02356 154.11362 131.22661 154.58861 131.44286 155.05777 c
131.49783 155.17615 131.54987 155.29674 131.60558 155.41438 c
131.87241 155.97342 132.15535 156.52296 132.4559 157.06154 c
132.50722 157.15361 132.56219 157.24277 132.61423 157.33412 c
132.88179 157.80107 133.1618 158.25926 133.45355 158.71016 c
133.52319 158.81831 133.5921 158.92719 133.66394 159.03389 c
134.01286 159.55711 134.37497 160.07085 134.75615 160.56923 c
134.78035 160.60138 134.806 160.63135 134.83018 160.66277 c
135.19304 161.13411 135.57275 161.59158 135.96272 162.03954 c
136.03749 162.12431 136.11153 162.21054 136.18703 162.29457 c
137.96902 164.29103 140.01932 166.04343 142.28513 167.49254 c
145.42397 169.02496 l
147.09674 169.7718 161.76251 176.61838 161.76251 186.73077 c
161.76251 238.61539 l
228.28806 119.23766 l
222.34317 122.14684 211.91434 127.28927 203.76962 131.51093 c
199.10828 133.92758 195.94084 142.45053 195.11472 145.52562 c
194.21675 149.10419 l
194.20648 149.10201 l
193.87076 151.04585 193.38036 152.93781 192.74776 154.76472 c
192.74849 154.76546 l
192.74629 154.77203 192.74336 154.77861 192.74115 154.78519 c
192.74115 154.78519 l
h
237.80794 117.20246 m
164.50478 248.74092 l
163.21172 251.06111 160.75899 252.5 158.09735 252.5 c
155.43498 252.5 152.98225 251.06111 151.68918 248.74092 c
78.386017 117.20246 l
76.466209 113.75761 77.632462 109.41538 81.022736 107.3875 c
154.3259 63.541348 l
155.48628 62.847115 156.79182 62.5 158.09735 62.5 c
159.40215 62.5 160.70767 62.847115 161.86806 63.541348 c
235.17123 107.3875 l
238.56151 109.41538 239.72775 113.75761 237.80794 117.20246 c
237.80794 117.20246 l
h
237.80794 117.20246 m
W*
0 0 636 316 rc
72.462502 257.5 m
243.73146 257.5 l
243.73146 57.5 l
72.462502 57.5 l
h
f
Q
q
-66 448 m
702 448 l
702 -576 l
-66 -576 l
h
-66 448 m
W*
271.16 169.96001 m
271.16 167.92 272.384 166.424 275.51199 166.424 c
278.64001 166.424 279.86401 167.92 279.86401 169.96001 c
279.86401 170.64 l
279.86401 178.256 286.12 184.92 294.82401 184.92 c
303.392 184.92 309.784 178.664 309.784 170.09599 c
309.784 166.696 l
309.784 164.92799 307.74399 163.70399 305.29599 163.16 c
288.56799 159.35201 l
276.60001 156.632 271.16 150.24001 271.16 140.312 c
271.16 129.024 281.224 119.368 294.82401 119.368 c
308.15201 119.368 318.48801 128.34399 318.48801 143.032 c
318.48801 170.23199 l
318.48801 183.28799 308.28799 192.536 294.82401 192.536 c
281.35999 192.536 271.16 183.01601 271.16 170.912 c
271.16 169.96001 l
h
294.82401 126.984 m
285.71201 126.984 279.86401 133.64799 279.86401 140.312 c
279.86401 146.976 283.80801 150.64799 290.608 152.28 c
304.888 155.54401 l
307.336 156.088 308.96799 156.76801 309.784 157.72 c
309.784 143.44 l
309.784 132.01601 302.168 126.984 294.82401 126.984 c
294.82401 126.984 l
h
370.336 143.44 m
370.336 132.696 363.53601 126.984 355.104 126.984 c
346.672 126.984 339.87201 132.696 339.87201 143.44 c
339.87201 188.45599 l
339.87201 190.496 338.64801 191.992 335.51999 191.992 c
332.392 191.992 331.168 190.496 331.168 188.45599 c
331.168 142.75999 l
331.168 127.528 342.45599 119.368 355.104 119.368 c
367.75201 119.368 379.04001 127.528 379.04001 142.75999 c
379.04001 188.45599 l
379.04001 190.496 377.81601 191.992 374.68799 191.992 c
371.56 191.992 370.336 190.496 370.336 188.45599 c
370.336 143.44 l
h
430.888 143.44 m
430.888 132.696 424.08801 126.984 415.65601 126.984 c
407.224 126.984 400.42401 132.696 400.42401 143.44 c
400.42401 168.464 l
400.42401 179.20799 407.224 184.92 415.65601 184.92 c
424.08801 184.92 430.888 179.20799 430.888 168.464 c
430.888 143.44 l
h
414.16 98.152 m
409.80801 98.152 405.32001 99.648003 401.784 102.504 c
399.74399 104.136 397.56799 103.728 396.07199 101.824 c
394.57599 99.919998 394.57599 97.744003 396.75201 96.112 c
401.37601 92.440002 408.17599 90.536003 414.16 90.536003 c
428.57599 90.536003 439.59201 99.239998 439.59201 115.152 c
439.59201 169.144 l
439.59201 184.37601 428.30399 192.536 415.65601 192.536 c
403.008 192.536 391.72 184.37601 391.72 169.144 c
391.72 142.75999 l
391.72 127.528 402.73599 119.368 414.43201 119.368 c
421.504 119.368 427.62399 122.496 430.888 126.848 c
430.888 115.696 l
430.888 104.68 424.496 98.152 414.16 98.152 c
414.16 98.152 l
h
492.79999 143.44 m
492.79999 132.696 486 126.984 477.56799 126.984 c
469.13599 126.984 462.336 132.696 462.336 143.44 c
462.336 188.45599 l
462.336 190.496 461.112 191.992 457.98401 191.992 c
454.85599 191.992 453.63199 190.496 453.63199 188.45599 c
453.63199 142.75999 l
453.63199 127.528 464.92001 119.368 477.56799 119.368 c
490.216 119.368 501.504 127.528 501.504 142.75999 c
501.504 188.45599 l
501.504 190.496 500.28 191.992 497.15201 191.992 c
494.02399 191.992 492.79999 190.496 492.79999 188.45599 c
492.79999 143.44 l
h
558.112 183.56 m
554.03198 189.67999 546.008 192.536 538.93597 192.536 c
526.15198 192.536 515.54401 183.696 515.54401 170.368 c
515.54401 123.448 l
515.54401 121.408 516.76801 119.912 519.896 119.912 c
523.02399 119.912 524.24799 121.408 524.24799 123.448 c
524.24799 169.96001 l
524.24799 179.48 531.32001 184.92 538.93597 184.92 c
544.37598 184.92 548.18402 182.608 550.90399 179.34399 c
552.26398 177.71201 554.03198 176.896 556.34399 178.392 c
558.65601 179.888 559.20001 181.79201 558.112 183.56 c
558.112 183.56 l
h
558.112 183.56 m
W*
0 0 636 316 rc
266.16 197.536 m
563.65106 197.536 l
563.65106 85.536003 l
266.16 85.536003 l
h
f
ep
end
%%Trailer
%%EOF
